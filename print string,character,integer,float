.data
    newline: .asciiz "\n"           # String for a newline character
    prompt_int: .asciiz "Enter an integer: "
    prompt_str: .asciiz "Enter a string: "
    prompt_char: .asciiz "Enter a character: "
    prompt_float: .asciiz "Enter a float: "
    prompt_double: .asciiz "Enter a double: "
    buffer: .space 100               # Buffer to store a string

.text
    main:
        # Print integer
        li $v0, 4                      # Load system call code for printing a string
        la $a0, prompt_int             # Load the address of the prompt for an integer
        syscall
        li $v0, 5                      # Load system call code for reading an integer
        syscall
        move $a0, $v0                  # Copy the integer to $a0
        li $v0, 1                      # Load system call code for printing an integer
        syscall

        # Print string
        li $v0, 4                      # Load system call code for printing a string
        la $a0, prompt_str             # Load the address of the prompt for a string
        syscall
        li $v0, 8                      # Load system call code for reading a string
        la $a0, buffer                 # Load the address of the buffer to store the string
        li $a1, 100                    # Set the maximum length of the string
        syscall
        li $v0, 4                      # Load system call code for printing a string
        move $a0, $a0                  # Move the address of the entered string to $a0
        syscall

        # Print character
        li $v0, 4                      # Load system call code for printing a string
        la $a0, prompt_char            # Load the address of the prompt for a character
        syscall
        li $v0, 12                     # Load system call code for reading a character
        syscall
        move $a0, $v0                  # Copy the character to $a0
        li $v0, 11                     # Load system call code for printing a character
        syscall

        # Print float
        li $v0, 4                      # Load system call code for printing a string
        la $a0, prompt_float           # Load the address of the prompt for a float
        syscall
        li $v0, 6                      # Load system call code for reading a float
        syscall
        mov.s $f12, $f0                # Move the float to $f12
        li $v0, 2                      # Load system call code for printing a float
        syscall

        # Print double
        li $v0, 4                      # Load system call code for printing a string
        la $a0, prompt_double          # Load the address of the prompt for a double
        syscall
        li $v0, 7                      # Load system call code for reading a double
        syscall
        sdc1 $f12, 0($sp)              # Store the double in memory
        ldc1 $f12, 0($sp)              # Load the double from memory
        li $v0, 3                      # Load system call code for printing a double
        syscall

        # Print a newline character
        li $v0, 4                      # Load system call code for printing a string
        la $a0, newline                # Load the address of the newline string
        syscall

        # Exit the program
        li $v0, 10                     # Load system call code for program exit
        syscall
